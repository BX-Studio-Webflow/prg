{"version":3,"file":"jobs.js","sources":["../src/jobs.ts"],"sourcesContent":["import type { JobsResponse } from \"../../types/jobs\";\nconst BASE_URL = \"https://prg-one.vercel.app\";\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  const jobSearchInput = document.querySelector<HTMLInputElement>(\n    `[dev-target=job-search]`\n  );\n  const jobFilterWrappers =\n    document.querySelectorAll<HTMLDivElement>(`[dev-target-filters]`);\n  const jobItemTemplate = document.querySelector<HTMLDivElement>(\n    `[dev-target=job-item-template]`\n  );\n  const jobLoader = document.querySelector<HTMLDivElement>(\n    `[dev-target=job-loader]`\n  );\n  const jobsWrapper = document.querySelector<HTMLDivElement>(\n    `[dev-target=jobs-wrapper]`\n  );\n  const jobList = document.querySelector<HTMLDivElement>(\n    `[dev-target=job-list]`\n  );\n  let currentState = \"\";\n  let currentCategory = \"\";\n  let jobSearch = \"\";\n  let globalJobs: JobsResponse | null = null;\n\n  if (\n    !jobSearchInput ||\n    !jobFilterWrappers ||\n    !jobItemTemplate ||\n    !jobLoader ||\n    !jobsWrapper ||\n    !jobList\n  ) {\n    return console.error(\"Missing elements\");\n  }\n\n  try {\n    const jobs = await getAllJobs();\n    console.log({ jobs });\n    globalJobs = jobs;\n    jobsInit({ jobs, jobList, jobLoader, jobItemTemplate, jobsWrapper });\n    searchInputInit({\n      jobSearchInput,\n      jobItemTemplate,\n      jobList,\n      jobLoader,\n      jobsWrapper,\n    });\n    filtersInit({\n      jobFilterWrappers,\n      jobItemTemplate,\n      jobList,\n      jobLoader,\n      jobsWrapper,\n    });\n  } catch (error) {\n    console.error(\"Something went wrong\", error);\n  }\n\n  function searchInputInit({\n    jobSearchInput,\n    jobItemTemplate,\n    jobList,\n    jobLoader,\n    jobsWrapper,\n  }: {\n    jobSearchInput: HTMLInputElement;\n    jobItemTemplate: HTMLDivElement;\n    jobList: HTMLDivElement;\n    jobLoader: HTMLDivElement;\n    jobsWrapper: HTMLDivElement;\n  }) {\n    jobSearchInput.addEventListener(\"input\", (event) => {\n      const searchInput = event.target as HTMLInputElement;\n      jobSearch = searchInput.value;\n      if (globalJobs) {\n        const filteredJob = filterJobs({\n          category: currentCategory,\n          jobs: globalJobs,\n          search: jobSearch,\n          state: currentState,\n        });\n        jobsInit({\n          jobs: filteredJob,\n          jobList,\n          jobLoader,\n          jobItemTemplate,\n          jobsWrapper,\n        });\n      }\n    });\n  }\n\n  function filterJobs({\n    category,\n    jobs,\n    search,\n    state,\n  }: {\n    jobs: JobsResponse;\n    search: string;\n    state: string;\n    category: string;\n  }): JobsResponse {\n    return {\n      ...jobs,\n      data: jobs.data.filter((job) => {\n        const matchesSearch =\n          search === \"\" ||\n          job.title.toLowerCase().includes(search.toLowerCase());\n\n        const matchesState =\n          state === \"\" ||\n          job.address.state?.toLowerCase() === state.toLowerCase();\n\n        const matchesCategory =\n          category === \"\" ||\n          job.publishedCategory.name.toLowerCase() === category.toLowerCase();\n\n        return matchesSearch && matchesState && matchesCategory;\n      }),\n    };\n  }\n\n  function filtersInit({\n    jobFilterWrappers,\n    jobItemTemplate,\n    jobList,\n    jobLoader,\n    jobsWrapper,\n  }: {\n    jobFilterWrappers: NodeListOf<HTMLDivElement>;\n    jobList: HTMLDivElement;\n    jobLoader: HTMLDivElement;\n    jobItemTemplate: HTMLDivElement;\n    jobsWrapper: HTMLDivElement;\n  }) {\n    jobFilterWrappers.forEach(async (filterWrapper) => {\n      const filterType = filterWrapper.getAttribute(\"dev-target-filters\");\n      const filterDropdownInput = filterWrapper.querySelector<HTMLDivElement>(\n        `[dev-target=dd-input]`\n      );\n      const filterDropdownWrapper = filterWrapper.querySelector<HTMLDivElement>(\n        `[dev-target=dd-wrapper]`\n      );\n\n      if (!filterDropdownWrapper || !filterDropdownInput) {\n        return console.error(\"Missing filter dropdown elements\");\n      }\n      if (!filterType) {\n        return console.error(\"Missing filter type\");\n      }\n\n      if (filterType === \"state\") {\n        const states = await getJobStates();\n        filterInit({\n          filterDropdownInput,\n          filterDropdownWrapper,\n          filterList: states,\n          filterType,\n          jobItemTemplate,\n          jobList,\n          jobLoader,\n          jobsWrapper,\n        });\n      } else if (filterType === \"category\") {\n        const categories = await getJobCategories();\n        filterInit({\n          filterDropdownInput,\n          filterDropdownWrapper,\n          filterList: categories,\n          filterType,\n          jobItemTemplate,\n          jobList,\n          jobLoader,\n          jobsWrapper,\n        });\n      }\n    });\n  }\n\n  function filterInit({\n    filterDropdownInput,\n    filterDropdownWrapper,\n    filterList,\n    filterType,\n    jobList,\n    jobLoader,\n    jobItemTemplate,\n    jobsWrapper,\n  }: {\n    filterDropdownInput: HTMLDivElement;\n    filterDropdownWrapper: HTMLDivElement;\n    filterList: string[];\n    filterType: string;\n    jobList: HTMLDivElement;\n    jobLoader: HTMLDivElement;\n    jobItemTemplate: HTMLDivElement;\n    jobsWrapper: HTMLDivElement;\n  }) {\n    const filterDropdownContainer =\n      filterDropdownWrapper.querySelector<HTMLDivElement>(\n        `[dev-target=dd-container]`\n      );\n    const filterDropdownItemTemplate =\n      filterDropdownWrapper.querySelector<HTMLDivElement>(\n        `[dev-target=dd-item-template]`\n      );\n    if (!filterDropdownContainer || !filterDropdownItemTemplate) {\n      return console.error(\"Missing filter dropdown elements\");\n    }\n    filterDropdownContainer.innerHTML = \"\";\n    console.log({ filterDropdownInput });\n    filterDropdownInput.addEventListener(\"click\", () => {\n      console.log(\"click\");\n      if (filterDropdownWrapper.getAttribute(\"dev-hide\") === \"true\") {\n        filterDropdownWrapper.setAttribute(\"dev-hide\", \"false\");\n      } else {\n        filterDropdownWrapper.setAttribute(\"dev-hide\", \"true\");\n      }\n    });\n    const filterEmptyDropdownItem = filterDropdownItemTemplate.cloneNode(\n      true\n    ) as HTMLDivElement;\n    filterEmptyDropdownItem.textContent = \"Select one...\";\n    filterEmptyDropdownItem.addEventListener(\"click\", () => {\n      filterDropdownInput.textContent = \"Select one...\";\n      if (filterType === \"state\") {\n        currentState = \"\";\n      } else if (filterType === \"category\") {\n        currentCategory = \"\";\n      }\n      filterDropdownWrapper.setAttribute(\"dev-hide\", \"true\");\n      if (globalJobs) {\n        const filteredJob = filterJobs({\n          category: currentCategory,\n          jobs: globalJobs,\n          search: jobSearch,\n          state: currentState,\n        });\n        jobsInit({\n          jobs: filteredJob,\n          jobList,\n          jobLoader,\n          jobItemTemplate,\n          jobsWrapper,\n        });\n      }\n    });\n    filterDropdownContainer.appendChild(filterEmptyDropdownItem);\n\n    filterList.forEach((filter) => {\n      const filterDropdownItem = filterDropdownItemTemplate.cloneNode(\n        true\n      ) as HTMLDivElement;\n      filterDropdownItem.textContent = filter;\n\n      filterDropdownItem.addEventListener(\"click\", () => {\n        filterDropdownInput.textContent = filter;\n        if (filterType === \"state\") {\n          currentState = filter;\n        } else if (filterType === \"category\") {\n          currentCategory = filter;\n        }\n        filterDropdownWrapper.setAttribute(\"dev-hide\", \"true\");\n        if (globalJobs) {\n          const filteredJob = filterJobs({\n            category: currentCategory,\n            jobs: globalJobs,\n            search: jobSearch,\n            state: currentState,\n          });\n          jobsInit({\n            jobs: filteredJob,\n            jobList,\n            jobLoader,\n            jobItemTemplate,\n            jobsWrapper,\n          });\n        }\n      });\n      filterDropdownContainer.appendChild(filterDropdownItem);\n    });\n  }\n\n  function jobsInit({\n    jobs,\n    jobList,\n    jobLoader,\n    jobItemTemplate,\n    jobsWrapper,\n  }: {\n    jobs: JobsResponse;\n    jobList: HTMLDivElement;\n    jobLoader: HTMLDivElement;\n    jobItemTemplate: HTMLDivElement;\n    jobsWrapper: HTMLDivElement;\n  }) {\n    jobList.innerHTML = \"\";\n    jobs.data.forEach((job) => {\n      const jobItem = jobItemTemplate.cloneNode(true) as HTMLDivElement;\n      const jobLink = jobItem.querySelector<HTMLAnchorElement>(\n        `[dev-target=item-link]`\n      );\n      const jobTitle = jobItem.querySelector<HTMLDivElement>(\n        `[dev-target=item-title]`\n      );\n      const jobLocation = jobItem.querySelector<HTMLDivElement>(\n        `[dev-target=location]`\n      );\n\n      if (!jobLink || !jobTitle || !jobLocation) {\n        return console.error(\"Missing job item elements\");\n      }\n      jobLink.href = `/internal-jobs-final?id=${job.id}`;\n      jobTitle.textContent = job.title;\n      jobLocation.textContent = `${job.address.city}${\n        job.address.state ? \"/\" + job.address.state : \"\"\n      }`;\n\n      jobList.appendChild(jobItem);\n    });\n    toggleHideElement({ element: jobLoader, toggle: \"hide\" });\n    toggleHideElement({ element: jobsWrapper, toggle: \"show\" });\n  }\n\n  function toggleHideElement({\n    element,\n    toggle,\n  }: {\n    element: HTMLElement;\n    toggle: \"show\" | \"hide\";\n  }) {\n    if (toggle === \"show\") {\n      element.setAttribute(\"dev-hide\", \"false\");\n    } else {\n      element.setAttribute(\"dev-hide\", \"true\");\n    }\n  }\n\n  async function getAllJobs() {\n    try {\n      const response = await fetch(`${BASE_URL}/api/jobs`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch jobs\");\n      }\n      const jobs: JobsResponse = await response.json();\n      return jobs;\n    } catch (error) {\n      console.error(\"Error fetching jobs:\", error);\n      throw error;\n    }\n  }\n\n  async function getJobStates() {\n    try {\n      const response = await fetch(`${BASE_URL}/api/states`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch job states\");\n      }\n      const states: string[] = await response.json();\n      return states;\n    } catch (error) {\n      console.error(\"Error fetching job states:\", error);\n      throw error;\n    }\n  }\n\n  async function getJobCategories() {\n    try {\n      const response = await fetch(`${BASE_URL}/api/categories`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch job categories\");\n      }\n      const categories: string[] = await response.json();\n      return categories;\n    } catch (error) {\n      console.error(\"Error fetching job categories:\", error);\n      throw error;\n    }\n  }\n});\n"],"names":["BASE_URL","jobSearchInput","jobFilterWrappers","jobItemTemplate","jobLoader","jobsWrapper","jobList","currentState","currentCategory","jobSearch","globalJobs","jobs","getAllJobs","jobsInit","searchInputInit","filtersInit","error","event","filteredJob","filterJobs","category","search","state","job","_a","matchesSearch","matchesState","matchesCategory","filterWrapper","filterType","filterDropdownInput","filterDropdownWrapper","states","getJobStates","filterInit","categories","getJobCategories","filterList","filterDropdownContainer","filterDropdownItemTemplate","filterEmptyDropdownItem","filter","filterDropdownItem","jobItem","jobLink","jobTitle","jobLocation","toggleHideElement","element","toggle","response"],"mappings":"AACA,MAAMA,EAAW,6BACjB,SAAS,iBAAiB,mBAAoB,SAAY,CACxD,MAAMC,EAAiB,SAAS,cAC9B,yBACF,EACMC,EACJ,SAAS,iBAAiC,sBAAsB,EAC5DC,EAAkB,SAAS,cAC/B,gCACF,EACMC,EAAY,SAAS,cACzB,yBACF,EACMC,EAAc,SAAS,cAC3B,2BACF,EACMC,EAAU,SAAS,cACvB,uBACF,EACA,IAAIC,EAAe,GACfC,EAAkB,GAClBC,EAAY,GACZC,EAAkC,KAGpC,GAAA,CAACT,GACD,CAACC,GACD,CAACC,GACD,CAACC,GACD,CAACC,GACD,CAACC,EAEM,OAAA,QAAQ,MAAM,kBAAkB,EAGrC,GAAA,CACI,MAAAK,EAAO,MAAMC,EAAW,EACtB,QAAA,IAAI,CAAE,KAAAD,EAAM,EACPD,EAAAC,EACbE,EAAS,CAAE,KAAAF,EAAM,QAAAL,EAAS,UAAAF,EAAW,gBAAAD,EAAiB,YAAAE,EAAa,EACnDS,EAAA,CACd,eAAAb,EACA,gBAAAE,EACA,QAAAG,EACA,UAAAF,EACA,YAAAC,CAAA,CACD,EACWU,EAAA,CACV,kBAAAb,EACA,gBAAAC,EACA,QAAAG,EACA,UAAAF,EACA,YAAAC,CAAA,CACD,QACMW,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,CAAA,CAG7C,SAASF,EAAgB,CACvB,eAAAb,EACA,gBAAAE,EACA,QAAAG,EACA,UAAAF,EACA,YAAAC,CAAA,EAOC,CACDJ,EAAe,iBAAiB,QAAUgB,GAAU,CAGlD,GADAR,EADoBQ,EAAM,OACF,MACpBP,EAAY,CACd,MAAMQ,EAAcC,EAAW,CAC7B,SAAUX,EACV,KAAME,EACN,OAAQD,EACR,MAAOF,CAAA,CACR,EACQM,EAAA,CACP,KAAMK,EACN,QAAAZ,EACA,UAAAF,EACA,gBAAAD,EACA,YAAAE,CAAA,CACD,CAAA,CACH,CACD,CAAA,CAGH,SAASc,EAAW,CAClB,SAAAC,EACA,KAAAT,EACA,OAAAU,EACA,MAAAC,CAAA,EAMe,CACR,MAAA,CACL,GAAGX,EACH,KAAMA,EAAK,KAAK,OAAQY,GAAQ,CAzGtC,IAAAC,EA0Gc,MAAAC,EACJJ,IAAW,IACXE,EAAI,MAAM,cAAc,SAASF,EAAO,aAAa,EAEjDK,EACJJ,IAAU,MACVE,EAAAD,EAAI,QAAQ,QAAZ,YAAAC,EAAmB,iBAAkBF,EAAM,YAAY,EAEnDK,EACJP,IAAa,IACbG,EAAI,kBAAkB,KAAK,YAAA,IAAkBH,EAAS,YAAY,EAEpE,OAAOK,GAAiBC,GAAgBC,CACzC,CAAA,CACH,CAAA,CAGF,SAASZ,EAAY,CACnB,kBAAAb,EACA,gBAAAC,EACA,QAAAG,EACA,UAAAF,EACA,YAAAC,CAAA,EAOC,CACDH,EAAkB,QAAQ,MAAO0B,GAAkB,CAC3C,MAAAC,EAAaD,EAAc,aAAa,oBAAoB,EAC5DE,EAAsBF,EAAc,cACxC,uBACF,EACMG,EAAwBH,EAAc,cAC1C,yBACF,EAEI,GAAA,CAACG,GAAyB,CAACD,EACtB,OAAA,QAAQ,MAAM,kCAAkC,EAEzD,GAAI,CAACD,EACI,OAAA,QAAQ,MAAM,qBAAqB,EAG5C,GAAIA,IAAe,QAAS,CACpB,MAAAG,EAAS,MAAMC,EAAa,EACvBC,EAAA,CACT,oBAAAJ,EACA,sBAAAC,EACA,WAAYC,EACZ,WAAAH,EACA,gBAAA1B,EACA,QAAAG,EACA,UAAAF,EACA,YAAAC,CAAA,CACD,CAAA,SACQwB,IAAe,WAAY,CAC9B,MAAAM,EAAa,MAAMC,EAAiB,EAC/BF,EAAA,CACT,oBAAAJ,EACA,sBAAAC,EACA,WAAYI,EACZ,WAAAN,EACA,gBAAA1B,EACA,QAAAG,EACA,UAAAF,EACA,YAAAC,CAAA,CACD,CAAA,CACH,CACD,CAAA,CAGH,SAAS6B,EAAW,CAClB,oBAAAJ,EACA,sBAAAC,EACA,WAAAM,EACA,WAAAR,EACA,QAAAvB,EACA,UAAAF,EACA,gBAAAD,EACA,YAAAE,CAAA,EAUC,CACD,MAAMiC,EACJP,EAAsB,cACpB,2BACF,EACIQ,EACJR,EAAsB,cACpB,+BACF,EACE,GAAA,CAACO,GAA2B,CAACC,EACxB,OAAA,QAAQ,MAAM,kCAAkC,EAEzDD,EAAwB,UAAY,GAC5B,QAAA,IAAI,CAAE,oBAAAR,EAAqB,EACfA,EAAA,iBAAiB,QAAS,IAAM,CAClD,QAAQ,IAAI,OAAO,EACfC,EAAsB,aAAa,UAAU,IAAM,OAC/BA,EAAA,aAAa,WAAY,OAAO,EAEhCA,EAAA,aAAa,WAAY,MAAM,CACvD,CACD,EACD,MAAMS,EAA0BD,EAA2B,UACzD,EACF,EACAC,EAAwB,YAAc,gBACdA,EAAA,iBAAiB,QAAS,IAAM,CAQtD,GAPAV,EAAoB,YAAc,gBAC9BD,IAAe,QACFtB,EAAA,GACNsB,IAAe,aACNrB,EAAA,IAEEuB,EAAA,aAAa,WAAY,MAAM,EACjDrB,EAAY,CACd,MAAMQ,EAAcC,EAAW,CAC7B,SAAUX,EACV,KAAME,EACN,OAAQD,EACR,MAAOF,CAAA,CACR,EACQM,EAAA,CACP,KAAMK,EACN,QAAAZ,EACA,UAAAF,EACA,gBAAAD,EACA,YAAAE,CAAA,CACD,CAAA,CACH,CACD,EACDiC,EAAwB,YAAYE,CAAuB,EAEhDH,EAAA,QAASI,GAAW,CAC7B,MAAMC,EAAqBH,EAA2B,UACpD,EACF,EACAG,EAAmB,YAAcD,EAEdC,EAAA,iBAAiB,QAAS,IAAM,CAQjD,GAPAZ,EAAoB,YAAcW,EAC9BZ,IAAe,QACFtB,EAAAkC,EACNZ,IAAe,aACNrB,EAAAiC,GAEEV,EAAA,aAAa,WAAY,MAAM,EACjDrB,EAAY,CACd,MAAMQ,EAAcC,EAAW,CAC7B,SAAUX,EACV,KAAME,EACN,OAAQD,EACR,MAAOF,CAAA,CACR,EACQM,EAAA,CACP,KAAMK,EACN,QAAAZ,EACA,UAAAF,EACA,gBAAAD,EACA,YAAAE,CAAA,CACD,CAAA,CACH,CACD,EACDiC,EAAwB,YAAYI,CAAkB,CAAA,CACvD,CAAA,CAGH,SAAS7B,EAAS,CAChB,KAAAF,EACA,QAAAL,EACA,UAAAF,EACA,gBAAAD,EACA,YAAAE,CAAA,EAOC,CACDC,EAAQ,UAAY,GACfK,EAAA,KAAK,QAASY,GAAQ,CACnB,MAAAoB,EAAUxC,EAAgB,UAAU,EAAI,EACxCyC,EAAUD,EAAQ,cACtB,wBACF,EACME,EAAWF,EAAQ,cACvB,yBACF,EACMG,EAAcH,EAAQ,cAC1B,uBACF,EAEA,GAAI,CAACC,GAAW,CAACC,GAAY,CAACC,EACrB,OAAA,QAAQ,MAAM,2BAA2B,EAE1CF,EAAA,KAAO,2BAA2BrB,EAAI,EAAE,GAChDsB,EAAS,YAActB,EAAI,MAC3BuB,EAAY,YAAc,GAAGvB,EAAI,QAAQ,IAAI,GAC3CA,EAAI,QAAQ,MAAQ,IAAMA,EAAI,QAAQ,MAAQ,EAChD,GAEAjB,EAAQ,YAAYqC,CAAO,CAAA,CAC5B,EACDI,EAAkB,CAAE,QAAS3C,EAAW,OAAQ,OAAQ,EACxD2C,EAAkB,CAAE,QAAS1C,EAAa,OAAQ,OAAQ,CAAA,CAG5D,SAAS0C,EAAkB,CACzB,QAAAC,EACA,OAAAC,CAAA,EAIC,CACGA,IAAW,OACLD,EAAA,aAAa,WAAY,OAAO,EAEhCA,EAAA,aAAa,WAAY,MAAM,CACzC,CAGF,eAAepC,GAAa,CACtB,GAAA,CACF,MAAMsC,EAAW,MAAM,MAAM,GAAGlD,CAAQ,WAAW,EAC/C,GAAA,CAACkD,EAAS,GACN,MAAA,IAAI,MAAM,sBAAsB,EAGjC,OADoB,MAAMA,EAAS,KAAK,QAExClC,EAAO,CACN,cAAA,MAAM,uBAAwBA,CAAK,EACrCA,CAAA,CACR,CAGF,eAAeiB,GAAe,CACxB,GAAA,CACF,MAAMiB,EAAW,MAAM,MAAM,GAAGlD,CAAQ,aAAa,EACjD,GAAA,CAACkD,EAAS,GACN,MAAA,IAAI,MAAM,4BAA4B,EAGvC,OADkB,MAAMA,EAAS,KAAK,QAEtClC,EAAO,CACN,cAAA,MAAM,6BAA8BA,CAAK,EAC3CA,CAAA,CACR,CAGF,eAAeoB,GAAmB,CAC5B,GAAA,CACF,MAAMc,EAAW,MAAM,MAAM,GAAGlD,CAAQ,iBAAiB,EACrD,GAAA,CAACkD,EAAS,GACN,MAAA,IAAI,MAAM,gCAAgC,EAG3C,OADsB,MAAMA,EAAS,KAAK,QAE1ClC,EAAO,CACN,cAAA,MAAM,iCAAkCA,CAAK,EAC/CA,CAAA,CACR,CAEJ,CAAC"}