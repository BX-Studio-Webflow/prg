{"version":3,"file":"job.js","sources":["../src/job.ts"],"sourcesContent":["const BASE_URL = \"http://localhost:3000\";\nimport type { JobResponse } from \"../../types/job\";\n\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  const jobIdInput = document.querySelector<HTMLInputElement>(\n    \"[dev-target=job-id]\"\n  );\n  const jobNameInput = document.querySelector<HTMLInputElement>(\n    \"[dev-target=job-name]\"\n  );\n  const jobTitle = document.querySelector<HTMLDivElement>(\"[dev-target=title]\");\n  const jobDescription = document.querySelector<HTMLDivElement>(\n    \"[dev-target=description]\"\n  );\n  const jobCustomText2 = document.querySelector<HTMLDivElement>(\n    \"[dev-target=custom-text-2]\"\n  );\n  const jobState = document.querySelector<HTMLDivElement>(\"[dev-target=state]\");\n  const jobWorkFromHome = document.querySelector<HTMLDivElement>(\n    \"[dev-target=isWorkFromHome]\"\n  );\n  const jobEmploymentType = document.querySelector<HTMLDivElement>(\n    \"[dev-target=employmentType]\"\n  );\n  const jobExternalCategoryID = document.querySelector<HTMLDivElement>(\n    \"[dev-target=externalCategoryID]\"\n  );\n  const jobLoader = document.querySelector<HTMLDivElement>(\n    `[dev-target=job-loader]`\n  );\n  const jobContentWrap = document.querySelector<HTMLDivElement>(\n    `[dev-target=content-wrap]`\n  );\n  const jobSlugId = new URLSearchParams(window.location.search).get(\"id\");\n\n  if (\n    !jobIdInput ||\n    !jobNameInput ||\n    !jobTitle ||\n    !jobDescription ||\n    !jobCustomText2 ||\n    !jobState ||\n    !jobWorkFromHome ||\n    !jobEmploymentType ||\n    !jobLoader ||\n    !jobContentWrap ||\n    !jobExternalCategoryID\n  ) {\n    return console.error(\"Missing element\");\n  }\n  if (!jobSlugId) {\n    return console.error(\"Missing id\");\n  }\n\n  try {\n    const job = await getJob(Number(jobSlugId));\n    if (job.count === 1) {\n      initPage({\n        job,\n        jobCustomText2,\n        jobDescription,\n        jobEmploymentType,\n        jobExternalCategoryID,\n        jobIdInput,\n        jobNameInput,\n        jobState,\n        jobTitle,\n        jobWorkFromHome,\n        jobLoader,\n        jobContentWrap,\n      });\n      console.log({ job });\n    } else {\n      console.log(\"no job\", job);\n    }\n  } catch (error) {\n    console.error(\"Something went wrong\", error);\n  }\n\n  function initPage({\n    job,\n    jobCustomText2,\n    jobDescription,\n    jobEmploymentType,\n    jobExternalCategoryID,\n    jobIdInput,\n    jobNameInput,\n    jobState,\n    jobTitle,\n    jobWorkFromHome,\n    jobLoader,\n    jobContentWrap,\n  }: {\n    job: JobResponse;\n    jobIdInput: HTMLInputElement;\n    jobNameInput: HTMLInputElement;\n    jobTitle: HTMLDivElement;\n    jobDescription: HTMLDivElement;\n    jobCustomText2: HTMLDivElement;\n    jobState: HTMLDivElement;\n    jobWorkFromHome: HTMLDivElement;\n    jobEmploymentType: HTMLDivElement;\n    jobExternalCategoryID: HTMLDivElement;\n    jobLoader: HTMLDivElement;\n    jobContentWrap: HTMLDivElement;\n  }) {\n    jobIdInput.value = job.data[0].id.toString();\n    jobNameInput.value = job.data[0].title;\n    jobTitle.textContent = job.data[0].title;\n    jobDescription.innerHTML = job.data[0].publicDescription;\n    jobCustomText2.textContent = job.data[0].customText2 ?? \"\";\n    jobState.textContent = job.data[0].address.state ?? \"\";\n    console.log({ jobWorkFromHome });\n    // jobWorkFromHome.innerText = job.data[0].isWorkFromHome ? \"Yes\" : \"No\";\n    jobEmploymentType.textContent = job.data[0].employmentType;\n    jobExternalCategoryID.innerText = job.data[0].externalCategoryID ?? \"\";\n    jobLoader.setAttribute(\"dev-hide\", \"true\");\n    jobContentWrap.setAttribute(\"dev-hide\", \"false\");\n  }\n\n  async function getJob(id: number) {\n    try {\n      const response = await fetch(`${BASE_URL}/api/jobs/${id}`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch job\");\n      }\n      const job: JobResponse = await response.json();\n      return job;\n    } catch (error) {\n      console.error(\"Error fetching job:\", error);\n      throw error;\n    }\n  }\n});\n"],"names":["BASE_URL","jobIdInput","jobNameInput","jobTitle","jobDescription","jobCustomText2","jobState","jobWorkFromHome","jobEmploymentType","jobExternalCategoryID","jobLoader","jobContentWrap","jobSlugId","job","getJob","initPage","error","id","response"],"mappings":"AAAA,MAAMA,EAAW,wBAGjB,SAAS,iBAAiB,mBAAoB,SAAY,CACxD,MAAMC,EAAa,SAAS,cAC1B,qBACF,EACMC,EAAe,SAAS,cAC5B,uBACF,EACMC,EAAW,SAAS,cAA8B,oBAAoB,EACtEC,EAAiB,SAAS,cAC9B,0BACF,EACMC,EAAiB,SAAS,cAC9B,4BACF,EACMC,EAAW,SAAS,cAA8B,oBAAoB,EACtEC,EAAkB,SAAS,cAC/B,6BACF,EACMC,EAAoB,SAAS,cACjC,6BACF,EACMC,EAAwB,SAAS,cACrC,iCACF,EACMC,EAAY,SAAS,cACzB,yBACF,EACMC,EAAiB,SAAS,cAC9B,2BACF,EACMC,EAAY,IAAI,gBAAgB,OAAO,SAAS,MAAM,EAAE,IAAI,IAAI,EAGpE,GAAA,CAACX,GACD,CAACC,GACD,CAACC,GACD,CAACC,GACD,CAACC,GACD,CAACC,GACD,CAACC,GACD,CAACC,GACD,CAACE,GACD,CAACC,GACD,CAACF,EAEM,OAAA,QAAQ,MAAM,iBAAiB,EAExC,GAAI,CAACG,EACI,OAAA,QAAQ,MAAM,YAAY,EAG/B,GAAA,CACF,MAAMC,EAAM,MAAMC,EAAO,OAAOF,CAAS,CAAC,EACtCC,EAAI,QAAU,GACPE,EAAA,CACP,IAAAF,EACA,eAAAR,EACA,eAAAD,EACA,kBAAAI,EACA,sBAAAC,EACA,WAAAR,EACA,aAAAC,EACA,SAAAI,EACA,SAAAH,EACA,gBAAAI,EACA,UAAAG,EACA,eAAAC,CAAA,CACD,EACO,QAAA,IAAI,CAAE,IAAAE,EAAK,GAEX,QAAA,IAAI,SAAUA,CAAG,QAEpBG,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,CAAA,CAG7C,SAASD,EAAS,CAChB,IAAAF,EACA,eAAAR,EACA,eAAAD,EACA,kBAAAI,EACA,sBAAAC,EACA,WAAAR,EACA,aAAAC,EACA,SAAAI,EACA,SAAAH,EACA,gBAAAI,EACA,UAAAG,EACA,eAAAC,CAAA,EAcC,CACDV,EAAW,MAAQY,EAAI,KAAK,CAAC,EAAE,GAAG,SAAS,EAC3CX,EAAa,MAAQW,EAAI,KAAK,CAAC,EAAE,MACjCV,EAAS,YAAcU,EAAI,KAAK,CAAC,EAAE,MACnCT,EAAe,UAAYS,EAAI,KAAK,CAAC,EAAE,kBACvCR,EAAe,YAAcQ,EAAI,KAAK,CAAC,EAAE,aAAe,GACxDP,EAAS,YAAcO,EAAI,KAAK,CAAC,EAAE,QAAQ,OAAS,GACpD,QAAQ,IAAI,CAAE,gBAAAN,CAAAA,CAAiB,EAE/BC,EAAkB,YAAcK,EAAI,KAAK,CAAC,EAAE,eAC5CJ,EAAsB,UAAYI,EAAI,KAAK,CAAC,EAAE,oBAAsB,GACpEH,EAAU,aAAa,WAAY,MAAM,EACzCC,EAAe,aAAa,WAAY,OAAO,CAAA,CAGjD,eAAeG,EAAOG,EAAY,CAC5B,GAAA,CACF,MAAMC,EAAW,MAAM,MAAM,GAAGlB,CAAQ,aAAaiB,CAAE,EAAE,EACrD,GAAA,CAACC,EAAS,GACN,MAAA,IAAI,MAAM,qBAAqB,EAGhC,OADkB,MAAMA,EAAS,KAAK,QAEtCF,EAAO,CACN,cAAA,MAAM,sBAAuBA,CAAK,EACpCA,CAAA,CACR,CAEJ,CAAC"}